org: carlserquina
app: food-cost-app
service: food-cost-api

frameworkVersion: ^4

params:
  default:
    domain: ${sls:stage}.foodcostapi.com
  prod:
    domain: foodcostapi.com
  dev:
    domain: dev.foodcostapi.com

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: food-cost-deployment-bucket-795796019955
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    DB_USER: ${env:DB_USER, 'foodcostadmin'}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_NAME: ${env:DB_NAME, 'foodcost'}
    DB_HOST: ${env:DB_HOST}
    NODE_ENV: ${opt:stage, 'production'}
  tags:
    environment: ${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::food-cost-deployment-bucket-795796019955/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - rds:*
          Resource: "*"

functions:
  food-cost-api-prod-FoodCostLambda:
    handler: lambda.handler
    memorySize: 512
    timeout: 29
    package:
      individually: true
      patterns:
        - lambda.js
        - data-source.js
        - "node_modules/**"
        - src/schema.graphql
        - vtl/**
        - "!**"

plugins:
  - serverless-appsync-plugin

appSync:
  name: FoodCostApi
  authentication:
    type: API_KEY
  schema: src/schema.graphql
  dataSources:
    FoodCostLambdaDataSource:
      type: AWS_LAMBDA
      config:
        functionName: FoodCostLambda
  resolvers:
    Query.dashboardStats:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/dashboardStats/request.vtl
      response: vtl/dashboardStats/response.vtl
    Query.ingredients:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/ingredients/request.vtl
      response: vtl/ingredients/response.vtl
    Query.recipes:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/recipes/request.vtl
      response: vtl/recipes/response.vtl
    Query.sales:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/sales/request.vtl
      response: vtl/sales/response.vtl
    Mutation.addIngredient:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/addIngredient/request.vtl
      response: vtl/addIngredient/response.vtl
    Mutation.createRecipe:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/createRecipe/request.vtl
      response: vtl/createRecipe/response.vtl
    Mutation.recordSale:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/recordSale/request.vtl
      response: vtl/recordSale/response.vtl
    Mutation.deleteIngredient:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/deleteIngredient/request.vtl
      response: vtl/deleteIngredient/response.vtl
    Mutation.deleteRecipe:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/deleteRecipe/request.vtl
      response: vtl/deleteRecipe/response.vtl
    Mutation.deleteSale:
      kind: UNIT
      dataSource: FoodCostLambdaDataSource
      request: vtl/deleteSale/request.vtl
      response: vtl/deleteSale/response.vtl

package:
  individually: true
  patterns:
    - src/schema.graphql
    - vtl/**
    - "!**"
