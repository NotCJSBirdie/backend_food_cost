org: carlserquina
app: food-cost-app
service: food-cost-api

frameworkVersion: ^4

params:
  default:
    domain: ${sls:stage}.foodcostapi.com
  prod:
    domain: foodcostapi.com
  dev:
    domain: dev.foodcostapi.com

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-southeast-2
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: food-cost-deployment-bucket-795796019955
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    NODE_ENV: ${opt:stage, 'production'}
    # Remove DB_HOST, DB_NAME, DB_USER, DB_PASSWORD unless used in logs/etc
  tags:
    environment: ${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:BatchGetItem
            - dynamodb:TransactWriteItems
          Resource: 
            - arn:aws:dynamodb:ap-southeast-2:*:*:table/Ingredients
            - arn:aws:dynamodb:ap-southeast-2:*:*:table/Recipes
            - arn:aws:dynamodb:ap-southeast-2:*:*:table/Sales
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::food-cost-deployment-bucket-795796019955/*"

functions:
  api:
    handler: lambda.handler
    memorySize: 512
    timeout: 29
    package:
      individually: true
      patterns:
        - lambda.js
        - "node_modules/**"
        - "!**"
    events:
      # Ingredients CRUD
      - http: { path: ingredients, method: get }
      - http: { path: ingredients, method: post }
      - http: { path: ingredients/{id}, method: delete }
      # Recipes CRUD
      - http: { path: recipes, method: get }
      - http: { path: recipes, method: post }
      - http: { path: recipes/{id}, method: delete }
      # Sales CRUD
      - http: { path: sales, method: get }
      - http: { path: sales, method: post }
      - http: { path: sales/{id}, method: delete }
      # Dashboard (custom endpoint)
      - http: { path: dashboard, method: get }

plugins: []

package:
  individually: true
  patterns:
    - lambda.js
    - "node_modules/**"
    - "!**"
