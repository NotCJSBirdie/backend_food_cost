type DashboardStats {
  totalSales: Float
  totalCosts: Float
  totalMargin: Float
  lowStockIngredients: [Ingredient]
}

type Ingredient {
  id: ID
  name: String
  unitPrice: Float
  unit: String
  stockQuantity: Float
  restockThreshold: Float
}

type Recipe {
  id: ID
  name: String
  totalCost: Float
  suggestedPrice: Float
  ingredients: [RecipeIngredient]
}

type RecipeIngredient {
  id: ID
  quantity: Float
  ingredient: Ingredient
}

type Sale {
  id: ID
  saleAmount: Float
  createdAt: String
  recipe: Recipe
}

type Mutation {
  addIngredient(
    name: String
    unitPrice: Float
    unit: String
    stockQuantity: Float
    restockThreshold: Float
  ): Ingredient
  createRecipe(
    name: String
    ingredientIds: [ID]
    quantities: [Float]
    targetMargin: Float
  ): Recipe
  recordSale(recipeId: ID, saleAmount: Float, quantitySold: Int): Sale
  deleteIngredient(id: ID!): Boolean
  deleteRecipe(id: ID!): Boolean
  deleteSale(id: ID!): Boolean
}

type Query {
  dashboardStats: DashboardStats
  ingredients: [Ingredient]
  recipes: [Recipe]
  sales: [Sale]
}
